<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Format of device driver request header</title>
</head>
<body background="../images/background_item.gif"><!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'faydoc', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/structures/25/2597.htm";
var tripod_ratings_hash = "1372262077:64a38b1e4645a2d64bb68f10c803e8a2";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "99.159.74.223";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=648167";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=648167";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=648167" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant -->

<!-- Start Datonics -->
<script type="text/javascript" src="http://ads.pro-market.net/ads/scripts/site-132783.js"></script>
<!--   End Datonics -->

<!-- Start Chango -->
<script type="text/javascript">
    var __cho__ = {"pid":1694};
    (function() {
        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.async = true;
        c.src = document.location.protocol + '//cc.chango.com/static/o.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(c, s);
    })();
</script>
<!--   End Chango -->


<center>
<table border="3" cellpadding="10" cellspacing="5">
<tr>
<td><!--webbot bot="Navigation" S-Type="global"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="TRUE" U-Page="/W:/doc/structures/25/2597.htm" S-Target startspan --><nobr>[&nbsp;<a href="../../rfc/index.htm" target="">Up</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="http://www.fay.naverex.kiev.ua/docs/index.htm" target="">Docs&nbsp;Home</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="32769" -->
</td>
<td>
<h1 align="center"><font color="#FF00FF"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/structures/25/2597.htm" S-Target startspan -->Format of device driver request header<!--webbot bot="Navigation" endspan i-checksum="26808" --></font></h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="FALSE" U-Page="/W:/doc/structures/25/2597.htm" S-Target startspan --><nobr>[&nbsp;<a href="2596.htm" target="">Back</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="2598.htm" target="">Next</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="41608" -->
</td>
</tr>
</table>
</center>
<hr>
<table border="3" cellpadding="3" cellspacing="3" height="3484">
<tr>
<th valign="top" align="center" nowrap height="19"><b>Offset</b></th>
<th valign="top" align="center" nowrap height="19"><b>Size</b></th>
<th valign="top" align="center" nowrap colspan="4" height="19"><b>Description</b></th>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>00h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> length of request header </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>01h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> subunit within device driver </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>02h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> command code (see <a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/95/25.html">#02595</a>) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>03h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> status (filled in by device driver)
  (see <a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/96/25.html">#02596</a>) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---DOS---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>05h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> 4 BYTEs </p>
</td>
<td valign="top" colspan="4" height="19"> reserved (unused in DOS 2.x and 3.x) </td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> <b>09h</b> </p>
</td>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> 
  <p align="left">(European MS-DOS 4.0 only) pointer to next request header in
  device's request queue </td>
</tr>
<tr>
<td valign="top" colspan="4" height="19"> 
  <p align="left">(other versions) reserved (unused in DOS 2.x and 3.x) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---STARLITE architecture---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>05h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> pointer to next request header </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>09h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> 4 BYTEs </p>
</td>
<td valign="top" colspan="4" height="19"> reserved </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 00h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" height="19"> (ret) </td>
<td valign="top" colspan="3" height="19"> number of units </td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3" height="81">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap rowspan="3" height="81">
<p align="right"> DWORD </p>
</td>
<td valign="top" rowspan="2" height="50"> (call) </td>
<td valign="top" colspan="3" height="19"> 
  <p align="left">(European MS-DOS 4.0 only) pointer to DOS device helper
  function (see <a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/99/25.html">#02599</a>) </td>
</tr>
<tr>
<td valign="top" colspan="3" height="19"> 
  <p align="left">(DOS 5+) pointer past end of memory available to driver </td>
</tr>
<tr>
<td valign="top" height="19"> (ret) </td>
<td valign="top" colspan="3" height="19"> address of first free byte following
  driver </td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="3" height="19"> (call) </td>
<td valign="top" height="19"> pointer to commandline arguments </td>
</tr>
<tr>
<td valign="top" colspan="3" height="19"> (ret) </td>
<td valign="top" height="19"> pointer to BPB array (block drivers) or
  0000h:0000h (character drivers) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>16h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> (DOS 3.0+) drive number for first unit
  of block driver (0=A) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---European MS-DOS 4.0---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>17h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> pointer to function to save registers
  on stack </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---DOS 5+ ---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="38">
<p align="right"> <b>17h</b> </p>
</td>
<td valign="top" nowrap height="38">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="2" height="38"> (ret) </td>
<td valign="top" colspan="2" height="38"> error-message flag<br>
  0001h MS-DOS should display error msg on init failure </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 01h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> media descriptor </td>
</tr>
<tr>
<td valign="top" nowrap height="100">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="100">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="2" height="100"> (ret) </td>
<td valign="top" colspan="2" height="100"> media status
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>don't know</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>media has not changed</td>
    </tr>
    <tr>
      <td>FFh</td>
      <td>=</td>
      <td>media has been changed</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="122">
<p align="right"> <b>0Fh</b> </p>
</td>
<td valign="top" nowrap height="122">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="2" height="122"> (ret) </td>
<td valign="top" colspan="2" height="122"> (DOS 3.0+) pointer to previous volume
  ID if the OPEN/CLOSE/RM bit in device header is set and disk changed
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td valign="top">Note:</td>
      <td>Some drives (or controllers???) forget the change line status if
        another drive is accessed afterwards. The DOS IO.SYS layer takes care of
        this by not relying on the reported change line status when the change
        line is not active and a different drive is accessed, instead it reports
        &quot;don't know&quot; to the DOS kernel.</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 02h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> media descriptor </td>
</tr>
<tr>
<td valign="top" nowrap height="57">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="57">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="57"> transfer address<br>
  <img border="0" src="../../images/arrow_lr.gif" width="23" height="8"> scratch sector if NON-IBM
  FORMAT bit in device header set<br>
  <img border="0" src="../../images/arrow_lr.gif" width="23" height="8"> first FAT sector otherwise </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> pointer to BPB (set by driver) (see <a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/63/16.html">#01663</a>
  at INT 21/AH=53h) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 03h, 0Ch---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> (see also INT 21/AX=4402h&quot;DOS 2+&quot;,INT
21/AX=4403h&quot;DOS&quot;) </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> media descriptor (block devices only) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address </td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="2" height="19"> (call) </td>
<td valign="top" colspan="2" height="19"> number of bytes to read/write </td>
</tr>
<tr>
<td valign="top" colspan="2" height="19"> (ret) </td>
<td valign="top" colspan="2" height="19"> actual number of bytes read or written </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 04h, 08h, 09h (except Compaq DOS 3.31, DR
DOS 6)---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> media descriptor (block devices only) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> byte count (character devices) or
  sector count (block devices) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>14h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> starting sector number (block devices
  only) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>16h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> (DOS 3.0+) pointer to volume ID if
  error 0Fh returned </td>
</tr>
<tr>
<td valign="top" nowrap height="38">
<p align="right"> <b>1Ah</b> </p>
</td>
<td valign="top" nowrap height="38">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="38"> (DOS 4.0+) 32-bit starting sector
  number (block devices with device attribute word bit 1 set only) if starting
  sector number above is FFFFh (see INT 21/AH=52h) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 04h, 08h, 09h (Compaq DOS 3.31, DR DOS
6)---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> media descriptor (block devices only) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> byte count (character devices) or
  sector count (block devices) </td>
</tr>
<tr>
<td valign="top" nowrap height="103">
<p align="right"> <b>14h</b> </p>
</td>
<td valign="top" nowrap height="103">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="103"> 32-bit starting sector number (block
  devices only)
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td valign="top">Note:</td>
      <td>To reliably determine which variant of the request block for functions
        04h,08h,09h has been passed to the driver, check the length field as
        well as the word at offset 14h. If the length is 1Eh and 14h=FFFFh, use
        the DWORD at 1Ah as the starting sector number; if the length is 18h,
        use the DWORD at 14h; otherwise, use the WORD at 14h.</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 05h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> byte read from device if BUSY bit
  clear on return </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 06h, 07h, 0Ah, 0Bh, 0Dh, 0Eh, 0Fh---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>no further fields</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 10h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> unused </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address </td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap rowspan="2" height="50">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="2" height="19"> (call) </td>
<td valign="top" colspan="2" height="19"> number of bytes to write </td>
</tr>
<tr>
<td valign="top" colspan="2" height="19"> (ret) </td>
<td valign="top" colspan="2" height="19"> actual number of bytes written </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 11h, 12h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> reserved </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 14h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>no further fields</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="2" height="92">
<p align="right"> </p>
</td>
<td valign="top" colspan="4" height="92"> 
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td nowrap valign="top">Note:</td>
      <td>This is at least true for KKCFUNC.SYS' &quot;device restore&quot;.
        KKCFUNC.SYS checks that INT 2Fh in the IVT still points to KKCFUNC's own
        INT 2Fh entry point. In this case it restores the original INT 2Fh
        vector, as recorded at device init, into the IVT.</td>
    </tr>
    <tr>
      <td nowrap valign="top">See Also:</td>
      <td>INT 2F/AH=4Dh</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 15h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>no further fields</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 13h, 19h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="17">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="17">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="17"> 
category code
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td align="right">00h-7Fh</td>
      <td>=</td>
      <td>reserved for Microsoft</td>
    </tr>
    <tr>
      <td align="right">00h</td>
      <td>=</td>
      <td>unknown</td>
    </tr>
    <tr>
      <td align="right">01h</td>
      <td>=</td>
      <td>COMn: (serial) (DOS 3.3+)</td>
    </tr>
    <tr>
      <td align="right">02h</td>
      <td>=</td>
      <td>reserved for terminal control</td>
    </tr>
    <tr>
      <td align="right">03h</td>
      <td>=</td>
      <td>CON (DOS 3.3+)</td>
    </tr>
    <tr>
      <td align="right">04h</td>
      <td>=</td>
      <td>reserved for keyboard control</td>
    </tr>
    <tr>
      <td align="right">05h</td>
      <td>=</td>
      <td>LPTn:</td>
    </tr>
    <tr>
      <td align="right">07h</td>
      <td>=</td>
      <td>mouse (European MS-DOS 4.0)</td>
    </tr>
    <tr>
      <td align="right">08h</td>
      <td>=</td>
      <td>disk</td>
    </tr>
    <tr>
      <td align="right">48h</td>
      <td>=</td>
      <td>FAT32 disk control (MS-DOS 7.10+)</td>
    </tr>
    <tr>
      <td align="right">80h-FFh</td>
      <td>=</td>
      <td>reserved for OEM/user-defined</td>
    </tr>
    <tr>
      <td align="right">9Eh</td>
      <td>=</td>
      <td>(STARLITE) Media Access Control driver</td>
    </tr>
    <tr>
      <td align="right">EDh</td>
      <td>=</td>
      <td>(DR PalmDOS) login security</td>
    </tr>
    <tr>
      <td align="right">SeeAlso</td>
      <td>:</td>
      <td><a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/58/15.html">#01558</a></td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> function code
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>(STARLITE) MAC Bind request</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Fh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> copy of DS at time of IOCTL call
  (apparently unused in DOS 3.3)<br>
  SI contents (European MS-DOS 4.0) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>11h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> offset of device driver header (see <a href="file://O:/www.delorie.com/djgpp/doc/rbinter/it/46/16.html">#01646</a>)<br>
  DI contents (European MS-DOS 4.0) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>13h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> pointer to parameter block from INT
  21/AX=440Ch or AX=440Dh </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 80h, 82h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> addressing mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>HSG (default)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>Phillips/Sony Red Book</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address (ignored for command
  82h) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> number of sectors to read (if 0 for
  command 82h, request is an advisory seek) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>14h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> starting sector number<br>
  logical sector number in HSG mode<br>
  frame/second/minute/unused in Red Book mode (HSG sector = minute * 4500 +
  second * 75 + frame - 150) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>18h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> data read mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>cooked (2048 bytes per frame)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>raw (2352 bytes per frame, including EDC/ECC)</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>19h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> interleave size (number of sectors
  stored consecutively) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>1Ah</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> interleave skip factor (number of
  sectors between consecutive portions) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 83h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> addressing mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>HSG (default)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>Phillips/Sony Red Book</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address (ignored) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> number of sectors to read (ignored) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>14h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> starting sector number (see also
  above) </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command code 84h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> addressing mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>HSG (default)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>Phillips/Sony Red Book</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> starting sector number (see also
  above) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> number of sectors to play </td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 85h, 88h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>no further fields</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap colspan="6" height="19">
<p align="center"> <b>---command codes 86h, 87h---</b> </p>
</td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Dh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> addressing mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>HSG (default)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>Phillips/Sony Red Book</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>0Eh</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> transfer address (ignored in write
  mode 0) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>12h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> WORD </p>
</td>
<td valign="top" colspan="4" height="19"> number of sectors to write </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>14h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> DWORD </p>
</td>
<td valign="top" colspan="4" height="19"> starting sector number (also see
  above) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>18h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> write mode
  <table border="0" cellspacing="0" cellpadding="3">
    <tr>
      <td>00h</td>
      <td>=</td>
      <td>mode 0 (write all zeros)</td>
    </tr>
    <tr>
      <td>01h</td>
      <td>=</td>
      <td>mode 1 (default) (2048 bytes per sector)</td>
    </tr>
    <tr>
      <td>02h</td>
      <td>=</td>
      <td>mode 2 form 1 (2048 bytes per sector)</td>
    </tr>
    <tr>
      <td>03h</td>
      <td>=</td>
      <td>mode 2 form 2 (2336 bytes per sector)</td>
    </tr>
  </table>
 </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>19h</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> interleave size (number of sectors
  stored consecutively) </td>
</tr>
<tr>
<td valign="top" nowrap height="19">
<p align="right"> <b>1Ah</b> </p>
</td>
<td valign="top" nowrap height="19">
<p align="right"> BYTE </p>
</td>
<td valign="top" colspan="4" height="19"> interleave skip factor (number of
  sectors between consecutive portions) </td>
</tr>
</table>
<hr>
<p> </p>
</body>
</html>
