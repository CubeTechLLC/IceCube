<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>REPNZ - Repeat String Operation Prefix</title>
</head>
<body background="images/background_item.gif"><!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'faydoc', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/cpu/repnz.htm";
var tripod_ratings_hash = "1372261328:8f2997753a4dda720ad0ac923820f594";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "99.159.74.223";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=396995";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=396995";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=396995" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant -->

<!-- Start Datonics -->
<script type="text/javascript" src="http://ads.pro-market.net/ads/scripts/site-132783.js"></script>
<!--   End Datonics -->

<!-- Start Chango -->
<script type="text/javascript">
    var __cho__ = {"pid":1694};
    (function() {
        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.async = true;
        c.src = document.location.protocol + '//cc.chango.com/static/o.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(c, s);
    })();
</script>
<!--   End Chango -->


<table border=3 cellpadding=10 cellspacing=5>
<tr>
<td><!--webbot bot="Navigation" S-Type="global" S-Orientation="horizontal"
  S-Rendering="graphics" B-Include-Home="FALSE" B-Include-Up="TRUE" U-Page="/W:/doc/cpu/repnz.htm"
  S-Target startspan --><!--webbot bot="Navigation" endspan i-checksum="0" -->
</td>
<td>
<h1 align="center"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering="graphics" S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/cpu/repnz.htm" S-Target startspan
--><!--webbot bot="Navigation" endspan i-checksum="0"
-->
</h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows" S-Orientation="horizontal"
  S-Rendering="graphics" B-Include-Home="FALSE" B-Include-Up="FALSE" U-Page="/W:/doc/cpu/repnz.htm"
  S-Target startspan --><!--webbot bot="Navigation" endspan i-checksum="0" -->
</td>
</tr>
</table>
<table border=1 cellpadding=3 cellspacing=3>
<tr>
<td align=center>
<h2><a href="index.htm">*</a></h2>
</td>
<td align=center>
<h2><a href="index_a.htm">A</a></h2>
</td>
<td align=center>
<h2><a href="index_b.htm">B</a></h2>
</td>
<td align=center>
<h2><a href="index_c.htm">C</a></h2>
</td>
<td align=center>
<h2><a href="index_d.htm">D</a></h2>
</td>
<td align=center>
<h2><a href="index_e.htm">E</a></h2>
</td>
<td align=center>
<h2><a href="index_f.htm">F</a></h2>
</td>
<td align=center>
<h2><a href="index_g.htm">G</a></h2>
</td>
<td align=center>
<h2><a href="index_h.htm">H</a></h2>
</td>
<td align=center>
<h2><a href="index_i.htm">I</a></h2>
</td>
<td align=center>
<h2><a href="index_j.htm">J</a></h2>
</td>
<td align=center>
<h2><a href="index_k.htm">K</a></h2>
</td>
<td align=center>
<h2><a href="index_l.htm">L</a></h2>
</td>
<td align=center>
<h2><a href="index_m.htm">M</a></h2>
</td>
<td align=center>
<h2><a href="index_n.htm">N</a></h2>
</td>
<td align=center>
<h2><a href="index_o.htm">O</a></h2>
</td>
<td align=center>
<h2><a href="index_p.htm">P</a></h2>
</td>
<td align=center>
<h2><a href="index_q.htm">Q</a></h2>
</td>
<td align=center>
<h2><a href="index_r.htm">R</a></h2>
</td>
<td align=center>
<h2><a href="index_s.htm">S</a></h2>
</td>
<td align=center>
<h2><a href="index_t.htm">T</a></h2>
</td>
<td align=center>
<h2><a href="index_u.htm">U</a></h2>
</td>
<td align=center>
<h2><a href="index_v.htm">V</a></h2>
</td>
<td align=center>
<h2><a href="index_w.htm">W</a></h2>
</td>
<td align=center>
<h2><a href="index_x.htm">X</a></h2>
</td>
<td align=center>
<h2><a href="index_y.htm">Y</a></h2>
</td>
<td align=center>
<h2><a href="index_z.htm">Z</a></h2>
</td>
<td align=center>
<h2><a href="conventions.htm">?</a></h2>
</td>
</tr>
</table>
<hr>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>Code</b></td>
<td><b>Mnemonic</b></td>
<td><b>Description</b></td>
</tr>
<tr>
<td nowrap>F3 6C </td>
<td nowrap> 	REP INS r/m8, DX </td>
<td> 		Input (E)CX bytes from port DX into ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 6D</td>
<td nowrap> 	REP INS r/m16, DX </td>
<td> 		Input (E)CX words from port DX into ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 6D </td>
<td nowrap> 	REP INS r/m32, DX </td>
<td> 		Input (E)CX doublewords from port DX into ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 A4 </td>
<td nowrap> 	REP MOVS m8, m8 </td>
<td> 		Move (E)CX bytes from DS:[(E)SI] to ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 A5</td>
<td nowrap> 	REP MOVS m16, m16</td>
<td> 	Move (E)CX words from DS:[(E)SI] to ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 A5 </td>
<td nowrap> 	REP MOVS m32, m32 </td>
<td> 	Move (E)CX doublewords from DS:[(E)SI] to ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 6E </td>
<td nowrap> 	REP OUTS DX, r/m8 </td>
<td> 	Output (E)CX bytes from DS:[(E)SI] to port DX</td>
</tr>
<tr>
<td nowrap>F3 6F</td>
<td nowrap> 	REP OUTS DX, r/m16</td>
<td> 	Output (E)CX words from DS:[(E)SI] to port DX</td>
</tr>
<tr>
<td nowrap>F3 6F </td>
<td nowrap> 	REP OUTS DX, r/m32 </td>
<td> 	Output (E)CX doublewords from DS:[(E)SI] to port DX</td>
</tr>
<tr>
<td nowrap>F3 AC </td>
<td nowrap>	REP LODS AL </td>
<td> 		Load (E)CX bytes from DS:[(E)SI] to AL</td>
</tr>
<tr>
<td nowrap>F3 AD </td>
<td nowrap>	REP LODS AX </td>
<td> 		Load (E)CX words from DS:[(E)SI] to AX </td>
</tr>
<tr>
<td nowrap>F3 AD</td>
<td nowrap> REP LODS EAX </td>
<td> 		Load (E)CX doublewords from DS:[(E)SI] to EAX</td>
</tr>
<tr>
<td nowrap>F3 AA </td>
<td nowrap>	REP STOS m8 </td>
<td> 		Fill (E)CX bytes at ES:[(E)DI] with AL</td>
</tr>
<tr>
<td nowrap>F3 AB </td>
<td nowrap> 	REP STOS m16 </td>
<td> 		Fill (E)CX words at ES:[(E)DI] with AX</td>
</tr>
<tr>
<td nowrap>F3 AB </td>
<td nowrap> 	REP STOS m32 </td>
<td> 		Fill (E)CX doublewords at ES:[(E)DI] with EAX</td>
</tr>
<tr>
<td nowrap>F3 A6 </td>
<td nowrap> 	REPE CMPS m8, m8 </td>
<td> 		Find nonmatching bytes in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F3 A7 </td>
<td nowrap> 	REPE CMPS m16, m16 </td>
<td> 	Find nonmatching words in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F3 A7</td>
<td nowrap> 	REPE CMPS m32, m32 </td>
<td> 	Find nonmatching doublewords in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F3 AE</td>
<td nowrap> 	REPE SCAS m8 </td>
<td> 		Find non-AL byte starting at ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 AF </td>
<td nowrap> 	REPE SCAS m16 </td>
<td> 		Find non-AX word starting at ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F3 AF </td>
<td nowrap> 	REPE SCAS m32 </td>
<td> 		Find non-EAX doubleword starting at ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F2 A6 </td>
<td nowrap> 	REPNE CMPS m8, m8 </td>
<td> 	Find matching bytes in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F2 A7 </td>
<td nowrap> 	REPNE CMPS m16, m16 </td>
<td> 	Find matching words in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F2 A7 </td>
<td nowrap> 	REPNE CMPS m32, m32 </td>
<td> 	Find matching doublewords in ES:[(E)DI] and DS:[(E)SI]</td>
</tr>
<tr>
<td nowrap>F2 AE </td>
<td nowrap> 	REPNE SCAS m8 </td>
<td> 		Find AL, starting at ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F2 AF </td>
<td nowrap> 	REPNE SCAS m16 </td>
<td> 		Find AX, starting at ES:[(E)DI]</td>
</tr>
<tr>
<td nowrap>F2 AF </td>
<td nowrap> 	REPNE SCAS m32 </td>
<td> 		Find EAX, starting at ES:[(E)DI]</td>
</tr>
</table>
<br>
<b>Description</b><br>
Repeats a string instruction the number of times specified in the count register ((E)CX) or until the indicated condition of the ZF flag is no longer met. The
<a href="repnz.htm"> REP</a> (repeat), <a href="repnz.htm"> REPE</a> (repeat while equal),
<a href="repnz.htm"> REPNE</a> (repeat while not equal), <a href="repz.htm"> REPZ</a> (repeat while zero), and
<a href="repnz.htm"> REPNZ</a> (repeat while not zero) mnemonics are prefixes that can be added to one of the string instructions. The
<a href="repnz.htm"> REP</a> prefix can be added to the <a href="ins.htm">INS</a>,
<a href="outs.htm">OUTS</a>, <a href="movs.htm">MOVS</a>, <a href="lods.htm">LODS</a>, and
<a href="stos.htm"> STOS</a> instructions, and the <a href="repnz.htm">REPE</a>, <a href="repnz.htm">REPNE</a>,
<a href="repz.htm">REPZ</a>, and <a href="repnz.htm"> REPNZ</a> prefixes can be added to the
<a href="cmps.htm"> CMPS</a> and <a href="scas.htm"> SCAS</a> instructions. (The
<a href="repz.htm"> REPZ</a> and <a href="repnz.htm"> REPNZ</a> prefixes are synonymous forms of the
<a href="repnz.htm"> REPE</a> and <a href="repnz.htm"> REPNE</a> prefixes, respectively.) The behavior of the
<a href="repnz.htm"> REP</a> prefix is undefined when used with non-string instructions.<br>
<br>
The <a href="repnz.htm"> REP</a> prefixes apply only to one string instruction at a time. To repeat a block of instructions, use the
<a href="loop.htm"> LOOP</a> instruction or another looping construct.<br>
<br>
All of these repeat prefixes cause the associated instruction to be repeated until the count in register (E)CX is decremented to 0 (see the following table). (If the current address-size attribute is 32, register ECX is used as a counter, and if the address-size attribute is 16, the CX register is used.) The
<a href="repnz.htm">REPE</a>, <a href="repnz.htm">REPNE</a>, <a href="repz.htm">REPZ</a>, and
<a href="repnz.htm"> REPNZ</a> prefixes also check the state of the ZF flag after each iteration and terminate the repeat loop if the ZF flag is not in the specified state. When both termination conditions are tested, the cause of a repeat termination can be determined either by testing the (E)CX register with a
<a href="jecxz.htm"> JECXZ</a> instruction or by testing the ZF flag with a <a href="jz.htm">JZ</a>,
<a href="jnz.htm">JNZ</a>, and <a href="jne.htm"> JNE</a> instruction.<br>
<table border=1 cellpadding=5 cellspacing=0 width=100%>
<tr>
<td width=33%><b>Repeat Prefix</b></td>
<td width=33%><b> 	Termination Condition 1</b></td>
<td width=34%><b> Termination Condition 2</b></td>
</tr>
<tr>
<td width=33%>REP </td>
<td width=33%>ECX=0 </td>
<td width=34%> 			None</td>
</tr>
<tr>
<td width=33%>REPE/REPZ</td>
<td width=33%>ECX=0 </td>
<td width=34%>ZF=0</td>
</tr>
<tr>
<td width=33%>REPNE/REPNZ</td>
<td width=33%> ECX=0 </td>
<td width=34%>ZF=1</td>
</tr>
</table>
<p>When the <a href="repnz.htm">REPE</a>/<a href="repz.htm">REPZ</a> and <a href="repnz.htm">REPNE</a>/<a href="repnz.htm">REPNZ</a> prefixes are used, the ZF flag does not require initialization because both the
<a href="cmps.htm"> CMPS</a> and <a href="scas.htm"> SCAS</a> instructions affect the ZF flag according to the results of the comparisons they make.<br>
<br>
A repeating string operation can be suspended by an exception or interrupt. When this happens, the state of the registers is preserved to allow the string operation to be resumed upon a return from the exception or interrupt handler. The source and destination registers point to the next string elements to be operated on, the EIP register points to the string instruction, and the ECX register has the value it held following the last successful iteration of the instruction. This mechanism allows long string operations to proceed without affecting the interrupt response time of the system.<br>
<br>
When a fault occurs during the execution of a <a href="cmps.htm"> CMPS</a> or <a href="scas.htm"> SCAS</a> instruction that is prefixed with
<a href="repnz.htm"> REPE</a> or <a href="repnz.htm">REPNE</a>, the EFLAGS value is restored to the state prior to the execution of the instruction. Since the
<a href="scas.htm"> SCAS</a> and <a href="cmps.htm"> CMPS</a> instructions do not use EFLAGS as an input, the processor can resume the instruction after the page fault handler.<br>
<br>
Use the REP INS and REP OUTS instructions with caution. Not all I/O ports can handle the rate at which these instructions execute.<br>
<br>
A REP STOS instruction is the fastest way to initialize a large block of memory.</p>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td nowrap><b>Operands</b></td>
<td><b>Bytes</b></td>
<td colspan="2"><b>Clocks</b></td>
</tr>
<tr>
<td nowrap>rep movsb</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>rep movsw</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>rep movsd</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>rep stosb</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>rep stosw</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>rep stosd</td>
<td>2</td>
<td>3 + ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/ repne/ repnz cmpsb</td>
<td>2</td>
<td>9 + 4 (count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/ repne/ repnz cmpsw</td>
<td>2</td>
<td>9 + 4 ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/ repne/ repnz cmpsd</td>
<td>2</td>
<td>9 + 4 ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/ repne/ repnz scasb</td>
<td>2</td>
<td>8 + 4 (count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/ repne/ repnz scasw</td>
<td>2</td>
<td>8 + 4 ( count of bytes, words or dwords) </td>
<td> NP</td>
</tr>
<tr>
<td nowrap>repe/repz/repne/repnz scasd</td>
<td>2</td>
<td>8 + 4 ( count of bytes, words or dwords)</td>
<td> NP</td>
</tr>
</table>
<br><b>Flags</b>
<table border=1 cellpadding=5>
<tr>
<td><b>ID</b></td>
<td><i>unaffected</i></td>
<td><b>DF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>VIP</b></td>
<td><i>unaffected</i></td>
<td><b>IF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>VIF</b></td>
<td><i>unaffected</i></td>
<td><b>TF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>AC</b></td>
<td><i>unaffected</i></td>
<td><b>SF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>VM</b></td>
<td><i>unaffected</i></td>
<td><b>ZF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>RF</b></td>
<td><i>unaffected</i></td>
<td><b>AF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>NT</b></td>
<td><i>unaffected</i></td>
<td><b>PF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>IOPL</b></td>
<td><i>unaffected</i></td>
<td><b>CF</b></td>
<td><i>unaffected</i></td>
</tr>
<tr>
<td><b>OF</b></td>
<td><i>unaffected</i></td>
</tr>
</table>
</body>
</html>
