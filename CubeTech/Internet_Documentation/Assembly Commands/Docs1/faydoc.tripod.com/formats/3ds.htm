<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>(.3ds) 3D Studio File Format</title>
</head>
<body background="images/background_item.gif"><!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'faydoc', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/formats/3ds.htm";
var tripod_ratings_hash = "1372261280:42a0bfdadda5ec16b6717770efbb9622";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "99.159.74.223";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=703121";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=703121";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=703121" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant -->

<!-- Start Datonics -->
<script type="text/javascript" src="http://ads.pro-market.net/ads/scripts/site-132783.js"></script>
<!--   End Datonics -->

<!-- Start Chango -->
<script type="text/javascript">
    var __cho__ = {"pid":1694};
    (function() {
        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.async = true;
        c.src = document.location.protocol + '//cc.chango.com/static/o.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(c, s);
    })();
</script>
<!--   End Chango -->


<table border=3 cellpadding=10 cellspacing=5>
<tr>
<td><!--webbot bot="Navigation" S-Type="global" S-Orientation="horizontal"
  S-Rendering="graphics" B-Include-Home="FALSE" B-Include-Up="TRUE" U-Page="/W:/doc/formats/3ds.htm"
  S-Target startspan --><nobr>[&nbsp;<a href="index.htm" target="">Up</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="http://www.fay.naverex.kiev.ua/docs/index.htm" target="">Docs&nbsp;Home</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="63939" -->
</td>
<td>
<h1 align="center"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering="graphics" S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/formats/3ds.htm" S-Target startspan
-->(3ds) 3D Studio File Format<!--webbot bot="Navigation" endspan i-checksum="59603"
-->
</h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows" S-Orientation="horizontal"
  S-Rendering="graphics" B-Include-Home="FALSE" B-Include-Up="FALSE" U-Page="/W:/doc/formats/3ds.htm"
  S-Target startspan --><nobr>[&nbsp;<a href="avi.htm" target="">Next</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="11754" -->
</td>
</tr>
</table>
<br>
The 3ds file format is made up of chunks. They describe what information
is to follow and what it is made up of, its ID and the location of
the next main block. If you don't understand a chuck you can quite simply
skip it. The next chunk pointer is relative to the start of the current
chunk and in bytes.<br>
<br>
<b>
* A Chunk.</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td> Chunk ID</td>
</tr>
<tr>
<td>2</td>
<td>5</td>
<td>4</td>
<td> Next Chunk</td>
</tr>
</table>
Chunks have a hierarchy imposed on them that is identified by its ID.
A 3ds file has the Primary chunk ID 4D4Dh. This is always the first chunk
of the file. With in the primary chunk are the main chunks.<br>
<br>
<b>
* Main Chunks</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>id</b></td>
<td><b> Description</b></td>
</tr>
<tr>
<td>
3D3D</td>
<td> Start of object mesh data.</td>
</tr>
<tr>
<td>
B000</td>
<td> Start of keyframer data.</td>
</tr>
</table>
The Next Chunk pointer after the ID block points to the next Main chunk.<br>
Directly after a Main chunk is another chunk. This could be any other
type of chunk allowable within its main chunks scope.<br>
<br>
For the Mesh description (3D3D) they could be any multiples of.<br>
<br>
<b>* Subchunks of 3D3D. - Mesh Block</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>id</b></td>
<td><b> Description</b></td>
</tr>
<tr>
<td>
1100</td>
<td> unknown</td>
</tr>
<tr>
<td>
1200</td>
<td> Background Colour.</td>
</tr>
<tr>
<td>
1201</td>
<td> unknown</td>
</tr>
<tr>
<td>
1300</td>
<td> unknown</td>
</tr>
<tr>
<td>
1400</td>
<td> unknown</td>
</tr>
<tr>
<td>
1420</td>
<td> unknown</td>
</tr>
<tr>
<td>
1450</td>
<td> unknown</td>
</tr>
<tr>
<td>
1500</td>
<td> unknown</td>
</tr>
<tr>
<td>
2100</td>
<td> Ambient Colour Block</td>
</tr>
<tr>
<td>
2200</td>
<td> fog?</td>
</tr>
<tr>
<td>
2201</td>
<td> fog?</td>
</tr>
<tr>
<td>
2210</td>
<td> fog?</td>
</tr>
<tr>
<td>
2300</td>
<td> unknown</td>
</tr>
<tr>
<td>
3000</td>
<td> unknown</td>
</tr>
<tr>
<td>
4000</td>
<td> Object Block</td>
</tr>
<tr>
<td>
7001</td>
<td> unknown</td>
</tr>
<tr>
<td>
AFFF</td>
<td> unknown</td>
</tr>
</table>
<p>
<b>
* Subchunks of 4000 - Object Description Block</b><br>
<br>
- first item of Subchunk 4000 is an ASCIIZ string of the objects name.<br>
Remember an object can be a mesh, a light or a camera.
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>id</b></td>
<td><b> Description</b></td>
</tr>
<tr>
<td>
4010</td>
<td> unknown</td>
</tr>
<tr>
<td>
4012</td>
<td> shadow?</td>
</tr>
<tr>
<td>
4100</td>
<td> Triangular Polygon Object</td>
</tr>
<tr>
<td>
4600</td>
<td> Light</td>
</tr>
<tr>
<td>
4700</td>
<td> Camera</td>
</tr>
</table>
<b>
<br>
* Subchunks of 4100 - Triangular Polygon Object</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>id</b></td>
<td><b> Description</b></td>
</tr>
<tr>
<td>
4110</td>
<td> Vertex List</td>
</tr>
<tr>
<td>
4111</td>
<td> unknown</td>
</tr>
<tr>
<td>
4120</td>
<td> Points List</td>
</tr>
<tr>
<td>
4160</td>
<td> Translation Matrix</td>
</tr>
</table>
<b>
<br>
* 4110 - Vertex List</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td> short int</td>
<td> Total vertices in object</td>
</tr>
<tr>
<td>2</td>
<td>5</td>
<td>4</td>
<td> float</td>
<td> X value</td>
</tr>
<tr>
<td>6</td>
<td>9</td>
<td>4</td>
<td> float</td>
<td> Y value</td>
</tr>
<tr>
<td>10</td>
<td>13</td>
<td>4</td>
<td> float</td>
<td> Z value</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>4</td>
<td> float</td>
<td rowspan="3">
bytes 2 .. 13 are repeated [Total vertices in object] times for
each vertex.</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>4</td>
<td> float</td>
</tr>
<tr>
<td></td>
<td></td>
<td>4</td>
<td> float</td>
</tr>
</table>
<b>
<br>
* 4111 - unknown</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td> short int</td>
<td> Total vertices in object?</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>2</td>
<td> short int</td>
<td> unknown</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>2</td>
<td> short int</td>
<td>
bytes 2..3 are repeated for X times as described by
short int at start of record.</td>
</tr>
</table>
<b>
<br>
* 4120 - Points List</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td> short int</td>
<td> Total polygons in object - numpoly</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>2</td>
<td> short int</td>
<td> Point 1</td>
</tr>
<tr>
<td>4</td>
<td>5</td>
<td>2</td>
<td> short int</td>
<td> Point 2</td>
</tr>
<tr>
<td>6</td>
<td>7</td>
<td>2</td>
<td> short int</td>
<td> Point 3</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>2</td>
<td> short int</td>
<td rowspan="3">
Repeats 'numpoly' times for each polygon.</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>2</td>
<td> short int</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>2</td>
<td> short int</td>
</tr>
</table>
These points refer to the corresponding vertex of<br>
the triangular polygon from the vertex list.<br>
Points are organized in a clock-wise order.<br>
<br>
<b>
* 4160 - Translation Matrix</b><br>
This structure describes a matrix for the object.
It is stored as a 3 X 4 matrix because it is assumed that
the right most column is 0,0,0,1
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> matrix 1,1</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> matrix 1,2</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> matrix 1,3</td>
</tr>
<tr>
<td>12</td>
<td>15</td>
<td>4</td>
<td> float</td>
<td> matrix 2,1</td>
</tr>
<tr>
<td>16</td>
<td>19</td>
<td>4</td>
<td> float</td>
<td> matrix 2,2</td>
</tr>
<tr>
<td>20</td>
<td>23</td>
<td>4</td>
<td> float</td>
<td> matrix 2,3</td>
</tr>
<tr>
<td>24</td>
<td>27</td>
<td>4</td>
<td> float</td>
<td> matrix 3,1</td>
</tr>
<tr>
<td>28</td>
<td>31</td>
<td>4</td>
<td> float</td>
<td> matrix 3,2</td>
</tr>
<tr>
<td>32</td>
<td>35</td>
<td>4</td>
<td> float</td>
<td> matrix 3,3</td>
</tr>
<tr>
<td>36</td>
<td>39</td>
<td>4</td>
<td> float</td>
<td> matrix 4,1</td>
</tr>
<tr>
<td>40</td>
<td>43</td>
<td>4</td>
<td> float</td>
<td> matrix 4,2</td>
</tr>
<tr>
<td>44</td>
<td>47</td>
<td>4</td>
<td> float</td>
<td> matrix 4,3</td>
</tr>
</table>
<br>
<b>
* 4600 - Light</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> Light pos X</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> Light pos Y</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> Light pos Z</td>
</tr>
</table>
<p>
after this structure check for more chunks.
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td>
<b>id</b>
</td>
<td><b>
id Description ( full description later )</b></td>
</tr>
<tr>
<td>
0010</td>
<td> RGB colour</td>
</tr>
<tr>
<td>
0011</td>
<td> 24 bit Colour</td>
</tr>
<tr>
<td>4610</td>
<td> Spot light</td>
</tr>
<tr>
<td>
4620</td>
<td> Light is off (Boolean)</td>
</tr>
</table>
<br>
<b>* 4610 - Spot Light</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> Target pos X</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> Target pos Y</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> Target pos Z</td>
</tr>
<tr>
<td>12</td>
<td>15</td>
<td>4</td>
<td> float</td>
<td> Hotspot</td>
</tr>
<tr>
<td>16</td>
<td>19</td>
<td>4</td>
<td> float</td>
<td> Falloff</td>
</tr>
</table>
<br>
<b>
* 0010 - RGB colour</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> Red</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> Green</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> Blue</td>
</tr>
</table>
<br>
<b>
* 0011 - RGB colour - 24 bit</b>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>0</td>
<td>1</td>
<td> byte</td>
<td> Red</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>1</td>
<td> byte</td>
<td> Green</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td>1</td>
<td> byte</td>
<td> Blue</td>
</tr>
</table>
<br>
<b>
* 4700 - Camera</b><br>
Describes the details of a camera in the scene.
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> Camera pos X</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> Camera pos Y</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> Camera pos Z</td>
</tr>
<tr>
<td>12</td>
<td>15</td>
<td>4</td>
<td> float</td>
<td> Target pos X</td>
</tr>
<tr>
<td>
16</td>
<td> 19</td>
<td>4</td>
<td> float</td>
<td> Target pos Y</td>
</tr>
<tr>
<td>20</td>
<td>23</td>
<td>4</td>
<td> float</td>
<td> Target pos Z</td>
</tr>
<tr>
<td>24</td>
<td>27</td>
<td>4</td>
<td> float</td>
<td> Camera Bank</td>
</tr>
<tr>
<td>28</td>
<td>31</td>
<td>4</td>
<td> float</td>
<td> Camera Lens</td>
</tr>
</table>
<br>
<b>
* 7001 - unknown chunk</b><br>
nothing known about this chunk except for its Subchunks.
This chunk also exists as a Subchunk in chunk B000 (keyframer info).
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td>
<b>id</b>
</td>
<td><b>
id Description</b></td>
</tr>
<tr>
<td>
7011</td>
<td> unknown</td>
</tr>
<tr>
<td>
7020</td>
<td> unknown</td>
</tr>
</table>
<br>
<b>
* B000 - Keyframer Main chunk.</b>
Subchunks are
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td>
<b>id</b>
</td>
<td><b>
id Description</b></td>
</tr>
<tr>
<td>
B00A</td>
<td> unknown</td>
</tr>
<tr>
<td>
7001</td>
<td> unknown</td>
</tr>
<tr>
<td>
B008</td>
<td> Frames</td>
</tr>
<tr>
<td>
B009</td>
<td> unknown</td>
</tr>
<tr>
<td>
B002</td>
<td> Start object description</td>
</tr>
</table>
<br>
<b>
* B008 - Frame information</b><br>
simple structure describing frame info.
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> integer</td>
<td> start frame</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> integer</td>
<td> end frame</td>
</tr>
</table>
<br>
<b>
* B002 - Start of Object info</b>
Subchunks
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td>
<b>id</b>
</td>
<td><b>
id Description</b></td>
</tr>
<tr>
<td>
B010</td>
<td> Name &amp; Hierarchy </td>
</tr>
<tr>
<td>
B011*</td>
<td> Name Dummy object </td>
</tr>
<tr>
<td>
B013</td>
<td> unknown </td>
</tr>
<tr>
<td>
B014*</td>
<td> unknown </td>
</tr>
<tr>
<td>
B015</td>
<td> unknown </td>
</tr>
<tr>
<td>
B020</td>
<td> Objects pivot point? </td>
</tr>
<tr>
<td>
B021</td>
<td> unknown </td>
</tr>
<tr>
<td>
B022</td>
<td> unknown </td>
</tr>
</table>
( * only on dummy objects )<br>
<br>
<b>
* B010 - Name &amp; hierarchy descriptor</b><br>
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>?</td>
<td>?</td>
<td> ASCIIZ</td>
<td> Object name</td>
</tr>
<tr>
<td>?</td>
<td>?</td>
<td>?</td>
<td> short int</td>
<td> unknown</td>
</tr>
<tr>
<td>?</td>
<td>?</td>
<td>?</td>
<td> short int</td>
<td> unknown</td>
</tr>
<tr>
<td>?</td>
<td>?</td>
<td>?</td>
<td> short int</td>
<td> Hierarchy of object</td>
</tr>
</table>
<br>
The object hierarchy is a bit complex but works like this.
Each object in the scene is given a number to identify its
order in the tree. Also each object is ordered in the 3ds
file as it would appear in the tree.
The root object is given the number -1 (FFFF).
As the file is read a counter of the object number
is kept.<br>
Is the counter increments the object are children of the previous
objects. But when the pattern is broken by a number that will be
less than the current counter the hierarchy returns to that level.
for example.
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>object name</b></td>
<td><b>hierarchy</b></td>
<td></td>
</tr>
<tr>
<td>A</td>
<td>-1</td>
<td rowspan="16"> This example is taken from 50pman.3ds.
I would really recommend having a look at one of the example with the hierarchy numbers to help work it out.
(if you can describe it any better please let me know. )</td>
</tr>
<tr>
<td>B</td>
<td>0</td>
</tr>
<tr>
<td>C</td>
<td>1</td>
</tr>
<tr>
<td>D</td>
<td>2</td>
</tr>
<tr>
<td>E</td>
<td>1</td>
</tr>
<tr>
<td>F</td>
<td>4</td>
</tr>
<tr>
<td>G</td>
<td>5</td>
</tr>
<tr>
<td>H</td>
<td>1</td>
</tr>
<tr>
<td>I</td>
<td>7</td>
</tr>
<tr>
<td>J</td>
<td>8</td>
</tr>
<tr>
<td>K</td>
<td>0</td>
</tr>
<tr>
<td>L</td>
<td>10</td>
</tr>
<tr>
<td>M</td>
<td>11</td>
</tr>
<tr>
<td>N</td>
<td>0</td>
</tr>
<tr>
<td>O</td>
<td>13</td>
</tr>
<tr>
<td>P</td>
<td>14</td>
</tr>
</table>
<img border=0 src="images/3ds.gif" width=319 height=255>
<br>
<br>
Still not done with this chunk yet!<br>
If the object name is $$$DUMMY then it is a dummy object
and therefore you should expect a few extra chunks.<br>
<br>
<b>
* B011 - Dummy objects name.</b><br>
Names a dummy object. ASCIIZ string.<br>
<br>
<b>
* B020 - Pivot Point?<br>
</b>
The objects pivot point. Not quite sure what the first
five floats do yet (ideas?).
<table border=1 cellpadding=5 cellspacing=0>
<tr>
<td><b>
start</b></td>
<td><b> end</b></td>
<td><b> size</b></td>
<td><b> type</b></td>
<td><b> name</b></td>
</tr>
<tr>
<td>0</td>
<td>3</td>
<td>4</td>
<td> float</td>
<td> unknown</td>
</tr>
<tr>
<td>4</td>
<td>7</td>
<td>4</td>
<td> float</td>
<td> unknown</td>
</tr>
<tr>
<td>8</td>
<td>11</td>
<td>4</td>
<td> float</td>
<td> unknown</td>
</tr>
<tr>
<td>12</td>
<td>15</td>
<td>4</td>
<td> float</td>
<td> unknown</td>
</tr>
<tr>
<td>16</td>
<td>19</td>
<td>4</td>
<td> float</td>
<td> unknown</td>
</tr>
<tr>
<td>20</td>
<td>23</td>
<td>4</td>
<td> float</td>
<td> Pivot X</td>
</tr>
<tr>
<td>24</td>
<td>27</td>
<td>4</td>
<td> float</td>
<td> Pivot Y</td>
</tr>
<tr>
<td>28</td>
<td>32</td>
<td>4</td>
<td> float</td>
<td> Pivot Z</td>
</tr>
</table>
</body>
</html>
