<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Format of DESQview object</title>
</head>
<body background="../images/background_item.gif"><!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'faydoc', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/structures/04/0414.htm";
var tripod_ratings_hash = "1372261471:633e1d1d624269401f37d4ea984db17f";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "99.159.74.223";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=350208";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=350208";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=350208" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant -->

<!-- Start Datonics -->
<script type="text/javascript" src="http://ads.pro-market.net/ads/scripts/site-132783.js"></script>
<!--   End Datonics -->

<!-- Start Chango -->
<script type="text/javascript">
    var __cho__ = {"pid":1694};
    (function() {
        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.async = true;
        c.src = document.location.protocol + '//cc.chango.com/static/o.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(c, s);
    })();
</script>
<!--   End Chango -->


<center>
<table border="3" cellpadding="10" cellspacing="5">
<tr>
<td><!--webbot bot="Navigation" S-Type="global"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="TRUE" U-Page="/W:/doc/structures/04/0414.htm" S-Target startspan --><nobr>[&nbsp;<a href="../../rfc/index.htm" target="">Up</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="http://www.fay.naverex.kiev.ua/docs/index.htm" target="">Docs&nbsp;Home</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="32769" -->
</td>
<td>
<h1 align="center"><font color="#FF00FF"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/structures/04/0414.htm" S-Target startspan -->Format of DESQview object<!--webbot bot="Navigation" endspan i-checksum="9073" --></font></h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="FALSE" U-Page="/W:/doc/structures/04/0414.htm" S-Target startspan --><nobr>[&nbsp;<a href="0413.htm" target="">Back</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="0415.htm" target="">Next</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="41053" -->
</td>
</tr>
</table>
</center>
<hr>
<table border="3" cellpadding="3" cellspacing="3">
<tr>
<th valign="top" align="center" nowrap><b>Offset</b></th>
<th valign="top" align="center" nowrap><b>Size</b></th>
<th valign="top" align="center" nowrap colspan="2"><b>Description</b></th>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>00h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of previous object of
same type</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>02h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of next object of same
type</td>
</tr>
<tr>
<td valign="top" nowrap align="right" rowspan="2">
<p align="right"><b>04h</b></p>
</td>
<td valign="top" nowrap rowspan="2">
<p align="right">WORD</p>
</td>
<td valign="top">(<font color="#008000">DV 2.42-</font>)</td>
<td valign="top">signature FEDCh</td>
</tr>
<tr>
<td valign="top">(<font color="#008000">DV 2.50+</font>)</td>
<td valign="top">signature FEDCh or object number</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>06h</b>
</td>
<td valign="top" nowrap>
<p align="right">WORD
</td>
<td valign="top" colspan="2">object type (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/13/4.html">#00413</a>)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>08h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">object handle to return to caller</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>0Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">canonicalized object address (segment = common
memory)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>10h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of owning task (0000h
for unowned OBJECTQs)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>12h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">mapping context <br>
offset in common memory of mapping context record (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/16/4.html">#00416</a>)</td>
</tr>
<tr>
<td valign="middle" nowrap align="right" colspan="4">
<p align="center">remainder varies by object type and DESQview version</p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="center" colspan="4">
<p align="center"><b>---v2.42 keyboard object---</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">flag bits (see also AH=12h/BH=0Ah&quot;OBJECT&quot;)
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 15</td>
<td>:</td>
<td>keyboard opened</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>16h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">priority in OBJECTQ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">...</p>
</td>
<td valign="top" colspan="2"> </td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>25h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? task</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>27h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.42 objectq object---</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">flag bits (see also AH=12h/BH=0Ah&quot;OBJECT&quot;)
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 15</td>
<td>:</td>
<td>OBJECTQ opened</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>16h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>18h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? task</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">6 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.42 mailbox object---</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">flag bits (see also AH=12h/BH=0Ah&quot;OBJECT&quot;)
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 15</td>
<td>:</td>
<td>mailbox opened</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ah</b>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">priority in OBJECTQ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">6 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>22h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of mailbox name
(counted string) <br>
0000h if no name</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>24h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">&lt;= 5 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.22-2.42,2.52,2.60 window/task object---</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>00h</td>
<td>-</td>
<td>window</td>
</tr>
<tr>
<td>01h</td>
<td>-</td>
<td>task</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>15h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">internal (not Switch menu) window number???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>16h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">internal (not Switch menu) window number???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>17h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">segment of internal window record (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/17/4.html">#00417</a>)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>19h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Bh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">cursor row</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">cursor column</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">visible window origin, row</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Eh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">visible window origin, column</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1Fh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window height (logical)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>20h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window width (logical)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>21h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window position, row</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>22h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window position, column</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>23h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window height (visible)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>24h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window width (visible)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>25h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">row of top of frame (or window if unframed)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>26h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">column of left of frame (or window if unframed)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>27h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window height (physical, including frame)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>28h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window width (physical, including frame)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>29h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed visible origin, row (00h before first
zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed visible origin, column (00h before
first zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Bh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed window position, row (00h before first
zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed window position, column (00h before
first zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed window height (00h before first zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Eh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">unzoomed window width (00h before first zoom)</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center">unzoomed parameters above are updated when window is
zoomed to full screen
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>2Fh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? initially logical window height</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>30h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? initially logical window width</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>31h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>33h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">minimum height of window</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>34h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">minimum width of window</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>35h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">maximum height of window</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>36h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">maximum width of window</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>37h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">3 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>3Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">8 BYTEs</p>
</td>
<td valign="top" colspan="2">window frame characters: ul,ur,ll,lr,t,b,l,r</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>42h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">24 BYTEs</p>
</td>
<td valign="top" colspan="2">attributes???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>5Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">8 BYTEs</p>
</td>
<td valign="top" colspan="2">window frame characters: ul,ur,ll,lr,t,b,l,r</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>62h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">3 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>65h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bitflags</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>66h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">bit 0: window is zoomed</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>67h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>68h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of window name or 0000h
if untitled</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>6Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">length of window name</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>6Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>6Eh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset of logical cursor in window (in
character cells)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>70h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to field table for window</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>74h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>75h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>77h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">number of last-visited field</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>78h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to field table entry for last-visited
field</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>7Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">3 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>7Fh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">select field marker character</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>80h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bit flags:
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 0</td>
<td>:</td>
<td>llow ECh window stream opcode to change reverse logattr</td>
</tr>
<tr>
<td>bit 1</td>
<td>:</td>
<td>alternate field processing mode selected</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>81h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>82h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">notification function (manager stream opcode
8Ah) no notification if segment = 0000h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>86h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">notification argument (manager stream opcode
8Bh)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>8Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? window object or
0000h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>8Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? window object or
0000h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>8Eh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? window object or
0000h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>90h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bitflags</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>91h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---task object only</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>92h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">bit flags (bits 0-4)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>93h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">character for ??? (default 20h)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>94h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? flag</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>95h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>97h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>99h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>9Bh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bit flags:
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 3</td>
<td>:</td>
<td>??? </td>
</tr>
<tr>
<td>bit 6</td>
<td>:</td>
<td>perform protected-attribute processing on select fields</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>9Ch</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>9Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of current register
save record (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/15/4.html">#00415</a>).
No register save record in use if &lt; 01C0h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>9Fh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of task's keyboard
object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>A1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of task's OBJECTQ
object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>A3h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of task's mailbox
object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>A5h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">semaphore: FFFFh if on user stack, else on
task's private stack</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>A7h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">user's SS:SP</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>ABh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">task's private SP (SS read from offset 0Ah)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>ADh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">6 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>B3h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bit flags:
<table border="1" width="100%">
<tr>
<td width="33%">bit 0</td>
<td width="33%">:</td>
<td width="34%">run in foreground only</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>B4h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>B5h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? bitflags</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>B6h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">task status (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/55/5.html">#00555</a>
at AX=DE2Ch)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>B7h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">9 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>C0h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">head pointer for keyboard buffer (wraps back to
00h after 80h)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>C2h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">tail pointer for keyboard buffer (wraps back to
00h after 80h)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>C4h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">??? (0000h)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>C6h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">segment of keyboard buffer for task</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>C8h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? keyboard object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>CAh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="center" colspan="4">
<p align="center"><b>---v2.22-2.42</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>CBh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>CEh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? flag</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>CFh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of default notify
window for task or 0000h if none</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D5h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window number on Switch Window menu</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D6h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">5 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>DBh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>DDh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>DFh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">API level for task</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>E1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of object task is
waiting on if task status is 'waiting', else 0000h</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>E7h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">segment of ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>E9h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>EDh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">EMS handle of virtualization buffer, 0000h if
no virtualization</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>F1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">12 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>FBh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>FDh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>FFh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">12 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>10Bh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to process record (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/18/4.html">#00418</a>,<a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/19/4.html">#00419</a>)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>10Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">10 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>119h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">SS:SP for ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>11Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>121h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>125h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">25 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>13Eh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to ??? in system memory</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.22</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>142h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">3 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>145h</b></p>
</td>
<td valign="top" nowrap>
<p align="right"> </p>
</td>
<td valign="top" colspan="2">task's default keyboard object</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.42</b></p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>142h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to first task instance data record in
system memory</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>148h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">DWORD</p>
</td>
<td valign="top" colspan="2">pointer to last task instance data record in
system memory (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/20/4.html">#00420</a>)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14Ah</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>14Dh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">42 BYTEs</p>
</td>
<td valign="top" colspan="2">task's default keyboard object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>177h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">32 BYTEs</p>
</td>
<td valign="top" colspan="2">task's ObjectQ object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>197h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">41 BYTEs</p>
</td>
<td valign="top" colspan="2">task's default mailbox object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>1C0h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">24 BYTEs</p>
</td>
<td valign="top" colspan="2">first register save record</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>450h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">--</p>
</td>
<td valign="top" colspan="2">default top of private stack</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.52 (probably all DV/X)</b></p>
</td>
</tr>
<tr>
<td valign="top" align="right" colspan="4">
<p align="center">Same as v2.60 below except there is an extra 29 bytes
inserted somewhere before offset 9Fh, but not yet known exactly where.
Also, for the WAIT_ON field (v2.60 offset E3h), some X apps (probably
waiting on a socket) have 0000h even when waiting.</p>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right" colspan="4">
<p align="center"><b>---v2.60</b>
</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>CBh</b>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">??? (added in 2.50 - rest is same as 2.42)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>CDh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D0h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">??? flag</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of default notify
window for task or 0000h if none</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D3h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">4 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D7h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">BYTE</p>
</td>
<td valign="top" colspan="2">window number on Switch Window menu</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>D8h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">5 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>DDh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">offset in common memory of ??? object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>DFh</b></p>
</td>
<td valign="top" nowrap>
<p align="right">2 BYTEs</p>
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>E1h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">API level for task</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<p align="right"><b>E3h</b></p>
</td>
<td valign="top" nowrap>
<p align="right">WORD</p>
</td>
<td valign="top" colspan="2">If status at B6h=waiting, offset in common
memory of object that task is waiting on, else 0000h. (Task with CPU also
has 0000h here)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>E9h</b>
</td>
<td valign="top" nowrap align="right">
WORD
</td>
<td valign="top" colspan="2">segment of ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>EBh</b>
</td>
<td valign="top" nowrap align="right">
4 BYTEs
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>EFh</b>
</td>
<td valign="top" nowrap align="right">
WORD
</td>
<td valign="top" colspan="2">EMS handle of virtualization buffer, 0 if no
virtualization</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>F3h</b>
</td>
<td valign="top" nowrap align="right">
12 BYTEs
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>FDh</b>
</td>
<td valign="top" nowrap align="right">
WORD
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>FFh</b>
</td>
<td valign="top" nowrap align="right">
BYTE
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>101h</b>
</td>
<td valign="top" nowrap align="right">
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>109h</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">pointer to process record in system memory</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>10Dh</b>
</td>
<td valign="top" nowrap align="right">
14 BYTEs
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>11Bh</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">SS:SP for ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>11Fh</b>
</td>
<td valign="top" nowrap align="right">
4 BYTEs
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>123h</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">pointer to ???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>127h</b>
</td>
<td valign="top" nowrap align="right">
25 BYTEs
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>140h</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">pointer to ??? in system memory</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>144h</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">pointer to first task instance data record in
system memory</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>148h</b>
</td>
<td valign="top" nowrap align="right">
DWORD
</td>
<td valign="top" colspan="2">pointer to last task instance data record in
system memory (from INT 15/AX=DE27h) (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/20/4.html">#00420</a>)</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>14Ch</b>
</td>
<td valign="top" nowrap align="right">
BYTE
</td>
<td valign="top" colspan="2">???</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>14Eh</b>
</td>
<td valign="top" nowrap align="right">
42 BYTEs
</td>
<td valign="top" colspan="2">task's default keyboard object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>179h</b>
</td>
<td valign="top" nowrap align="right">
32 BYTEs
</td>
<td valign="top" colspan="2">task's ObjectQ object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>199h</b>
</td>
<td valign="top" nowrap align="right">
41 BYTEs
</td>
<td valign="top" colspan="2">task's default mailbox object</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>1C2h</b>
</td>
<td valign="top" nowrap align="right">
24 BYTEs
</td>
<td valign="top" colspan="2">first register save record</td>
</tr>
<tr>
<td valign="top" nowrap align="right">
<b>452h</b>
</td>
<td valign="top" nowrap align="right">
--
</td>
<td valign="top" colspan="2">default top of private stack</td>
</tr>
</table>
<hr>
<p> </p>
</body>
</html>
