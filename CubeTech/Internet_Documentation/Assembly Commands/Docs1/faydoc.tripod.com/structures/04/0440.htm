<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Values for MODE 00h (set or display values) &quot;WINDOW STREAM&quot; opcodes</title>
</head>
<body background="../images/background_item.gif"><!--'"</title></head>-->
<script type="text/javascript">
////// Compete /////////////////////
__compete_code = '667f89f26d96c30e99728fe6a608804d';
(function () {
    var s = document.createElement('script'),
        d = document.getElementsByTagName('head')[0] ||
            document.getElementsByTagName('body')[0],
        t = 'https:' == document.location.protocol ? 
            'https://c.compete.com/bootstrap/' : 
            'http://c.compete.com/bootstrap/';
    s.src = t + __compete_code + '/bootstrap.js';
    s.type = 'text/javascript';
    s.async = 'async'; 
    if (d) { d.appendChild(s); }
})();


////// Quantcast  /////////////////////
function channValidator(chann) {
    return (typeof(chann) == 'string' && chann != '');
}

function lycosQuantcast(){
    var lb = "";
    if(typeof(cm_host) !== 'undefined' && channValidator(cm_host)){
        lb += cm_host.split('.')[0] + '.';
    }

    if(typeof(cm_taxid) !== 'undefined' && channValidator(cm_taxid)){
        lb += cm_taxid;
        lb = lb.replace('/','');
    } else {
        lb = lb.replace('.','');
    }
    return lb;
}

var _qevents = _qevents || [];

(function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" :"http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
    qacct:"p-6eQegedn62bSo",
    labels:lycosQuantcast()
});

////// OwnerIQ  /////////////////////
var __oiq_pct = 50;
if( __oiq_pct>=100 || Math.floor(Math.random()*100/(100-__oiq_pct)) > 0 ) {
    var _oiqq = _oiqq || [];
    _oiqq.push(['oiq_addPageBrand', 'Lycos']);
    _oiqq.push(['oiq_addPageCat', 'Internet > Websites']);
    _oiqq.push(['oiq_addPageLifecycle', 'Intend']);
    _oiqq.push(['oiq_doTag']);

    (function() {
        var oiq = document.createElement('script'); oiq.type = 'text/javascript'; oiq.async = true;
        oiq.src = document.location.protocol + '//px.owneriq.net/stas/s/lycosn.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(oiq, s);
    })();
}



/////// Google Analytics ////////////
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-21402695-19']);
_gaq.push(['_setDomainName', 'tripod.com']);
_gaq.push(['_setCustomVar', 1, 'member_name', 'faydoc', 3]);
_gaq.push(['_trackPageview']);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();


/////// Lycos Initialization ////////////
function getReferrer() {
    // Reads the referrer out of the cookie, if available.
    var all= this.document.cookie;
    if (all== '') return false;
    var cookie_name = 'REFERRER=';
    var start = all.lastIndexOf(cookie_name);
    if (start == -1) return false;  // referrer URL not found.
    start += cookie_name.length;
    var end = all.indexOf(';', start);
    if (end == -1) end = all.length;
    return all.substring(start, end);
}
function getQuery() {
    // Get the referrer search query from cookie, if available.
    var rfr = getReferrer();
    if (rfr == '') return false;
    var q = extractQuery(rfr, 'yahoo.com', 'p=');
    if (q) return q;
    q = extractQuery(rfr, '', 'q=');
    return q ? q : "";
}
function extractQuery(full, site, q_param) {
    var start = full.lastIndexOf(site);
    if (start == -1) return false;
    start = full.lastIndexOf(q_param);
    if (start == -1) return false;
    start += q_param.length;
    var end = full.indexOf('&', start);
    if (end == -1) end = full.length;
    return unescape(full.substring(start, end)).split(" ").join("+");
}

function generateHref(atag, template){
    atag.href=template.replace('_MYURL_', window.location.href.replace('http://', '')).replace('_MYTITLE_', 'Check%20out%20this%20Tripod%20Member%20site!'); 
}


var lycos_ad = Array();
var lycos_onload_timer;

var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "faydoc";
var tripod_member_page = "faydoc/structures/04/0440.htm";
var tripod_ratings_hash = "1372261478:fea792ced4187bbed502ff47f0968614";

var lycos_ad_category = {"find_what":"reliv.com"};

var lycos_ad_remote_addr = "99.159.74.223";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=813388";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=813388";
var lycos_search_query = getQuery();


////// Criteo /////////////////////
var cto_conf = { a:true, i: "294", c:"img", kw: "" } ;
(function (){
    var c = document.createElement("script"); c.type = "text/javascript"; c.async = true;
    c.src = "http://members.tripod.com/adm/partner/criteo_ld_kw.js";
    var s = document.getElementsByTagName("body")[0]; s.appendChild(c);
})(); 

</script>

<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript"> 

(function(isV) {
    if (!isV) {
        return;
    }

    //this.lycos_search_query = lycos_get_search_referrer();
    var adMgr = new AdManager();
    var lycos_prod_set = adMgr.chooseProductSet();
    var slots = ["leaderboard", "leaderboard2", "toolbar_image", "toolbar_text", "smallbox", "top_promo", "footer2"];
    var adCat = this.lycos_ad_category;
    adMgr.setForcedParam('page', (adCat && adCat.dmoz) ? adCat.dmoz : 'member');

    if (this.lycos_search_query) {
        adMgr.setForcedParam("keyword", this.lycos_search_query);
    } 
    else if (adCat && adCat.find_what) {
        adMgr.setForcedParam('keyword', adCat.find_what);
    }

    for (var s in slots) {
        var slot = slots[s];
        if (adMgr.isSlotAvailable(slot)) {
            this.lycos_ad[slot] = adMgr.getSlot(slot);
        }
    }

    adMgr.renderHeader();
    adMgr.renderFooter();
}((function() {
    var w = 0, h = 0, minimumThreshold = 300;
    if (top == self) {
        return true;
    }

    if (typeof(window.innerWidth) == 'number' ) {
        w = window.innerWidth;
        h = window.innerHeight;
    }
    else if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
        w = document.documentElement.clientWidth;
        h = document.documentElement.clientHeight;
    }
    else if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
        w = document.body.clientWidth;
        h = document.body.clientHeight;
    }

    return ((w > minimumThreshold) && (h > minimumThreshold));
}())));
    
window.onload = function() {
    var f = document.getElementById("FooterAd");
    var b = document.getElementsByTagName("body")[0];
    b.appendChild(f);
    f.style.display = "block";
    document.getElementById('lycosFooterAdiFrame').src = '/adm/ad/footerAd.iframe.html';


    // DOM Injection Ad
    (function(isTrellix) {
        var e = document.createElement('iframe');
        e.style.border = '0';
        e.style.margin = 0;
        e.style.display = 'block';
        e.style.cssFloat = 'right';
        e.style.height = '254px';
        e.style.overflow = 'hidden';
        e.style.padding = 0;
        e.style.width = '300px';

        var getCommentNodes = function(regexPattern) {
            var nodes = {};
            var nodesA = [];
            var preferredNodesList = ['a', 'c', 'b'];

            (function getNodesThatHaveComments(n, pattern) {
                if (n.hasChildNodes()) {
                    if (n.tagName === 'IFRAME') {
                        return false;
                    }
                    for (var i = 0; i < n.childNodes.length; i++) {
                        if ((n.childNodes[i].nodeType === 8) && (pattern.test(n.childNodes[i].nodeValue))) {
                            var areaName = pattern.exec(n.childNodes[i].nodeValue)[1];
                            nodes[areaName] = n;
                        }
                        else if (n.childNodes[i].nodeType === 1) {
                            getNodesThatHaveComments(n.childNodes[i], pattern);
                        }
                    }
                }
            }(document.body, regexPattern));

            for (var i in preferredNodesList) {
                if (nodes[preferredNodesList[i]]) {
                    if (nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode) {
                        nodesA.push(nodes[preferredNodesList[i]].parentNode.parentNode.parentNode.parentNode);
                    }
                }
            }

            return nodesA;
        }

        var properNode = null;
        var areaNodes = getCommentNodes(new RegExp('^area Type="area_(\\w+)"'));
        for (var i = 0; i < areaNodes.length; i++) {
            var a = parseInt(getComputedStyle(areaNodes[i]).width);
            if ((a >= 300) && (a <= 400)) {
                properNode = areaNodes[i];
                break;
            }
        }

        if ((isTrellix) && (properNode)) {
            e.src = '/adm/ad/injectAd.iframe.html';
            properNode.insertBefore(e, properNode.firstChild);
        }
        else {
            e.src = '/adm/ad/sliderAd.iframe.html';
            var sliderBlock = document.getElementById('lyslider-adblock-wrapper');
            var sliderHolder = document.getElementById('lyslider-adblock-holder');
            var sliderClose = document.getElementById('lyslider-adblock-close');
            sliderBlock.style.display = 'block';

            sliderClose.onclick = function() {
                sliderBlock.parentNode.removeChild(sliderBlock);
                return false;
            }

            var iframeOnload = function() {
                setTimeout((function sliiide() {
                    var s = (window.getComputedStyle) ? parseInt(getComputedStyle(sliderHolder).right) : parseInt(sliderHolder.currentStyle.right);
                    if (s <= 0) {
                        sliderHolder.style.right = (s + 6) + 'px';
                        setTimeout(sliiide, 10);
                    }
                    else {
                        sliderHolder.style.right = '0px';
                        sliderClose.style.display = 'block';
                    }
                }), 1000);
            }

            if (e.attachEvent) {
                e.attachEvent('onload', iframeOnload);
            }
            else {
                e.addEventListener('load', iframeOnload, false);
            }

            sliderHolder.insertBefore(e, sliderHolder.firstChild);
        }
    }(document.isTrellix));

}



</script>
<style>
	#body .adCenterClass{margin:0 auto}
</style>

<div id="tb_container" style="background:#DFDCCF; border-bottom:1px solid #393939; position:relative; z-index:999999999!important">
    <div id="tb_ad" class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
    <a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block" />
    </a> 
        <div id="ad_container" style="display:block!important; float:left; width:728px ">
        <script type="text/javascript">document.write(lycos_ad['leaderboard']);</script>
        </div>
    </div>
</div>

<!-- ///////////////////////////////////// -->
<div id="lyslider-adblock-wrapper" style="display:none; height:300px; overflow:hidden; position:absolute; right:0; top:150px; width:320px; z-index:99999999; ">
<div id="lyslider-adblock-holder" style="background-color:#888; height:250px; margin-bottom:25px; padding:4px; position:absolute; right:-320px; top:10px; width:300px; ">
<a id="lyslider-adblock-close" href="#" style="background-color:#222; bottom:-19px; color:#fff; display:block; font:10px Arial, Helvetica, Sans-serif; padding:4px; position:absolute; right:0; text-decoration:none; z-index:9999999999">Close Ad</a>
</div>
</div>


<div id="FooterAd" style="background:#DFDCCF; border-top:1px solid #393939; clear:both; display:none; width:100%!important; position:relative; z-index:999999!important; height:90px!important"> 
	<div class="adCenterClass" style="display:block!important; overflow:hidden; width:916px;">
	<a href="http://adtrack.ministerial5.com/clicknew/?a=637394" title="build your own website at Tripod.com" style="float:left; display:block; width:186px; border:0">
    	<img src="http://ly.lygo.com/ly/tpSite/images/freeAd2.jpg" alt="Make your own free website on Tripod.com" style="border:0; display:block; " />
    </a> 
        <div id="footerAd_container" style="display:block!important; float:left; width:728px">
        <iframe id="lycosFooterAdiFrame" style="border:0; display:block; float:left; height:96px; overflow:hidden; padding:0; width:750px"></iframe>
        <!-- <script type="text/javascript">document.write(lycos_ad['leaderboard2']);</script> -->
        </div>
	</div>
</div>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=813388" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&amp;ad_size=728x90&amp;section=209094"></iframe>
 <!-- END TAG -->
</noscript>

<!-- Start Ybrant -->
<img src="http://ad.yieldmanager.com/pixel?id=1901600&t=2" width="1" height="1" />
<!--   End Ybrant -->

<!-- Start Datonics -->
<script type="text/javascript" src="http://ads.pro-market.net/ads/scripts/site-132783.js"></script>
<!--   End Datonics -->

<!-- Start Chango -->
<script type="text/javascript">
    var __cho__ = {"pid":1694};
    (function() {
        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.async = true;
        c.src = document.location.protocol + '//cc.chango.com/static/o.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(c, s);
    })();
</script>
<!--   End Chango -->


<center>
<table border="3" cellpadding="10" cellspacing="5">
<tr>
<td><!--webbot bot="Navigation" S-Type="global"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="TRUE" U-Page="/W:/doc/structures/04/0440.htm" S-Target startspan --><nobr>[&nbsp;<a href="../../rfc/index.htm" target="">Up</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="http://www.fay.naverex.kiev.ua/docs/index.htm" target="">Docs&nbsp;Home</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="32769" -->
</td>
<td>
<h1 align="center"><font color="#FF00FF"><!--webbot bot="Navigation" S-Type="banner"
S-Rendering S-Orientation B-Include-Home B-Include-Up U-Page="/W:/doc/structures/04/0440.htm" S-Target startspan -->Values for MODE 00h (set or display values) &quot;WINDOW STREAM&quot; opcodes<!--webbot bot="Navigation" endspan i-checksum="10582" --></font></h1>
</td>
<td><!--webbot bot="Navigation" S-Type="arrows"
S-Orientation="horizontal" S-Rendering="graphics" B-Include-Home="FALSE"
B-Include-Up="FALSE" U-Page="/W:/doc/structures/04/0440.htm" S-Target startspan --><nobr>[&nbsp;<a href="0439.htm" target="">Back</a>&nbsp;]</nobr> <nobr>[&nbsp;<a href="0441.htm" target="">Next</a>&nbsp;]</nobr><!--webbot bot="Navigation" endspan i-checksum="41057" -->
</td>
</tr>
</table>
</center>
<hr>
<table border="3" cellpadding="3" cellspacing="3">
<tr>
<th valign="top" align="center" nowrap rowspan="2"><b>Opcode</b></th>
<th valign="top" align="center" nowrap colspan="2"><b>Arguments</b></th>
</tr>
<tr>
<th valign="top" align="center" nowrap><b>Size</b></th>
<th valign="top" align="center" nowrap><b>Description</b></th>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>00h</b></p>
</td>
<td valign="top" nowrap colspan="2">
display 20h blanks with the default attribute
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>01h - 1Fh</b></p>
</td>
<td valign="top" nowrap colspan="2">
display OPCODE blanks with the default attribute
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>20h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
display char with default attribute 20h times
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">char to repeat</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>21h - 3Fh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
display char with default attribute OPCODE-20h times
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">char to repeat</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>40h</b></p>
<p align="right">
</td>
<td valign="top" nowrap colspan="2">
display 20h blanks with specified attribute
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font>
</td>
<td valign="top">attribute of blanks</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>41h - 5Fh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
display OPCODE-40h blanks with specified attribute
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">attribute of blanks</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>60h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
display next 20h characters
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">20h BYTEs</font></p>
</td>
<td valign="top">characters to display</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>61h - 7Fh</b></p>
</td>
<td valign="top" nowrap colspan="2">
display next OPCODE-60h characters
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">characters to display</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>80h - 87h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
display N blanks with default attribute
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">low 8 bits of 11-bit count (high 3 in low 3 bits of OPCODE)
[000h means 800h]</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>88h - 8Fh</b></p>
</td>
<td valign="top" nowrap colspan="2">
display N copies of the character
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">low 8 bits of 11-bit count (high 3 in low 3 bits of OPCODE)
[000h means 800h]</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">character to repeat</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>90h - 97h</b></p>
</td>
<td valign="top" nowrap colspan="2">
display N blanks with specified attribute
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">low 8 bits of 11-bit length (high 3 in low 3 bits of
OPCODE) [000h means 800h]</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">attribute</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>98h - 9Fh</b></p>
</td>
<td valign="top" nowrap colspan="2">
display string at logical cursor pos
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">low 8 bits of 11-bit length (high 3 in low 3 bits of
OPCODE) [000h means 800h]</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">string to display</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A0h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set logical cursor row
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row number (0 is top)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A1h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set logical cursor column
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column number (0 is leftmost)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A2h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set top edge of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A3h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set left edge of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A4h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set row of physical window position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">line</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A5h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set column of physical window position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A6h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set height of physical window
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A7h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set width of physical window
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A8h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set viewport row
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>A9h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set viewport column
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>AAh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set virtual screen height [contents of window unpredictable
after]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">rows</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>ABh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set virtual screen width [contents of window unpredictable
after]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">columns</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>ACh - AEh</b></p>
</td>
<td valign="top" nowrap colspan="2">
unused
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>AFh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set compatible/preferred video modes
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">compatibility/preference mask
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7</td>
<td>-</td>
<td>compatible with monochrome</td>
</tr>
<tr>
<td>bit 6</td>
<td>-</td>
<td>compatible with color text, EGA/VGA graphics</td>
</tr>
<tr>
<td>bit 5</td>
<td>-</td>
<td>compatible with medium-resolution CGA graphics</td>
</tr>
<tr>
<td>bit 4</td>
<td>-</td>
<td>compatible with high-resolution CGA graphics</td>
</tr>
<tr>
<td>bit 3</td>
<td>-</td>
<td>prefer monochrome</td>
</tr>
<tr>
<td>bit 2</td>
<td>-</td>
<td>prefer color text, EGA/VGA graphics</td>
</tr>
<tr>
<td>bit 1</td>
<td>-</td>
<td>prefer medium-resolution CGA graphics</td>
</tr>
<tr>
<td>bit 0</td>
<td>-</td>
<td>prefer high-resolution CGA graphics</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B0h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
move logical cursor down
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows (signed, negative values move up) [if rows=0
and hardware cursor owner, update hardware cursor]</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B1h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
move logical cursor right
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns (signed, negative values move left) [if
cols=0 and hardware cursor owner, update hardware cursor]</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B2h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
shift top edge of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B3h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
shift left edge of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B4h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
shift physical window down
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of lines (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B5h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
shift physical window right
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B6h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
expand physical window vertically
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of lines (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B7h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
expand physical window horizontally
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>B8h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
adjust viewport row
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows (signed)</td>
</tr>
<tr>
<td valign="top" nowrap align="right" rowspan="2">
<b>B9h</b>
</td>
<td valign="top" nowrap colspan="2">
adjust viewport column
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font>
</td>
<td valign="top">number of columns (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>BAh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
adjust virtual screen height [contents of window unpredict
after]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows to increase (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>BBh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
adjust virtual screen width [contents of window unpredictbl
after]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns to increase (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>BCh - BFh</b></p>
</td>
<td valign="top" nowrap colspan="2">
reserved (currently unused)
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C0h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set logical cursor position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row number (0 is top border)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column number (0 is left border)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C1h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set top left corner of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C2h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set physical window pos
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">upper left row (no top border if 0)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">upper left column (no left border if 0)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C3h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set current window size
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C4h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set upper left corner of viewport (portion of virtual
screen displayed in window)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">row</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">column</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C5h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set size of virtual screen [contents unpredictable
afterwards]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>C6h</b></p>
</td>
<td valign="top" nowrap colspan="2">
unused
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>C7h</b></p>
</td>
<td valign="top" nowrap colspan="2">
unused
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C8h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set logical cursor relative to current position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows to move down (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns to move right (signed) [if rows=cols=0
and hardware cursor owner, update hardw cursor]</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>C9h</b></p>
</td>
<td valign="top" nowrap colspan="2">
shift top left corner of scrolling region
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>CAh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set window pos relative to current position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows to shift down (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns to shift right (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>CBh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set window size relative to current size
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows to expand (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of cols to expand (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>CCh</b></p>
</td>
<td valign="top" nowrap colspan="2">
shift viewport relative to current position
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">rows to shift (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">cols to shift (signed)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>CDh</b></p>
</td>
<td valign="top" nowrap colspan="2">
resize virtual screen
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows to expand (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns to expand (signed)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>CEh</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll text when using E8h-EBh/F8h-FBh opcodes (default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>CFh</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll attributes when using E8h-EBh/F8h-FBh opcodes
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D0h</b></p>
</td>
<td valign="top" nowrap colspan="2">
allow window frame to extend beyond screen
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D1h</b></p>
</td>
<td valign="top" nowrap colspan="2">
always display a complete frame, even if window extends
beyond edge of screen
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D2h</b></p>
</td>
<td valign="top" nowrap colspan="2">
allow DV to change logical colors on video mode switch
(default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D3h</b></p>
</td>
<td valign="top" nowrap colspan="2">
application changes logical attributes
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D4h</b></p>
</td>
<td valign="top" nowrap colspan="2">
window is visible [must redraw to actually make visible]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D5h</b></p>
</td>
<td valign="top" nowrap colspan="2">
window is hidden [must redraw to actually remove]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D6h</b></p>
</td>
<td valign="top" nowrap colspan="2">
window has frame (default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D7h</b></p>
</td>
<td valign="top" nowrap colspan="2">
window unframed [must redraw to actually remove frame]
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D8h</b></p>
</td>
<td valign="top" nowrap colspan="2">
READ/READN will read characters from window (default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>D9h</b></p>
</td>
<td valign="top" nowrap colspan="2">
READ/READN will read attributes from window
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DAh</b></p>
</td>
<td valign="top" nowrap colspan="2">
use logical attributes, which may be remapped (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/41/4.html">#00441</a>)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DBh</b></p>
</td>
<td valign="top" nowrap colspan="2">
use physical attributes for characters
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DCh</b></p>
</td>
<td valign="top" nowrap colspan="2">
enable special actions for control characters (default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DDh</b></p>
</td>
<td valign="top" nowrap colspan="2">
disable special control char handling, all chars
displayable by BIOS TTY call
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DEh</b></p>
</td>
<td valign="top" nowrap colspan="2">
write both character and attribute (default)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>DFh</b></p>
</td>
<td valign="top" nowrap colspan="2">
write character only, leave attribute untouched
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>E0h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
repeat following commands through E1h opcode
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of times to repeat (00h means 256 times)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>E1h</b></p>
</td>
<td valign="top" nowrap colspan="2">
end of commands to repeat, start repeating them
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>E2h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set current output color
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">color</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>E3h</b></p>
</td>
<td valign="top" nowrap colspan="2">
clear virtual screen from scroll origin to end using
current color
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>E4h</b></p>
</td>
<td valign="top" nowrap colspan="2">
redraw window
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>E5h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
select menu style
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">style (normally 18h)
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bits 5, 4</td>
<td>=</td>
<td>01</td>
<td>use two-letter menu entries for remainder of this stream</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>E5h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
(panel file only)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">modifier
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7, 6</td>
<td>=</td>
<td>11</td>
<td>panel stream creates new window</td>
</tr>
<tr>
<td></td>
<td>=</td>
<td>10</td>
<td>panel defines new field table for existing window</td>
</tr>
<tr>
<td></td>
<td>=</td>
<td>01</td>
<td>panel stream uses existing window &amp; field table</td>
</tr>
<tr>
<td>bit 5</td>
<td>=</td>
<td>1</td>
<td>stream contains a field table (create kyboard object)</td>
</tr>
<tr>
<td>bit 4</td>
<td>=</td>
<td>1</td>
<td>stream defines input fields (create keyboard object)</td>
</tr>
<tr>
<td>bit 3</td>
<td>=</td>
<td>1</td>
<td>stream defines select fields but not input fields</td>
</tr>
<tr>
<td>bit 2</td>
<td>=</td>
<td>1</td>
<td>stream defines exclusive input window (DV 2.2)</td>
</tr>
<tr>
<td>bit 1</td>
<td>-</td>
<td colspan="2">reserved</td>
</tr>
<tr>
<td>bit 0</td>
<td>-</td>
<td colspan="2">reserved</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="5">
<p align="right"><b>E6h</b></p>
</td>
<td valign="top" nowrap colspan="2">
create new window and perform rest of manipulations in new
window
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of rows</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">number of columns</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">Return:</font></p>
</td>
<td valign="top">DWORD object handle of new window returned on stack at end</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">Note:</font></p>
</td>
<td valign="top">the window is created with a physical size of 0x0 at the
same position as the window to which this stream was sent</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>E7h</b></p>
</td>
<td valign="top" nowrap colspan="2">
no operation
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>E8h</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll area up (top left corner defined by opcode C1h)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">height</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">width</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>E9h</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll area down (top left corner defined by opcode C1h)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">height</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">width</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>EAh</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll area left (top left corner defined by opcode C1h)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">height</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">width</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>EBh</b></p>
</td>
<td valign="top" nowrap colspan="2">
scroll area right (top left corner defined by opcode C1h)
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">height</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">width</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="4">
<p align="right"><b>ECh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set logical attributes for window contents
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">video modes command applies to
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7</td>
<td>-</td>
<td>monochrome</td>
</tr>
<tr>
<td>bit 6</td>
<td>-</td>
<td>color text, EGA/VGA graphics</td>
</tr>
<tr>
<td>bit 5</td>
<td>-</td>
<td>medium-resolution CGA graphics</td>
</tr>
<tr>
<td>bit 4</td>
<td>-</td>
<td>high-resolution CGA graphics</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">which attributes to set
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7</td>
<td>-</td>
<td>if set, copy single following byte to indicated attribs</td>
</tr>
<tr>
<td>bit 4 - 6</td>
<td>-</td>
<td>number of first attribute to change - 1</td>
</tr>
<tr>
<td>bit 0 - 3</td>
<td>-</td>
<td>number of consecutive attributes to change</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">new attributes</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="4">
<p align="right"><b>EDh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set logical attributes for window frame
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">video modes command applies to (also see opcode ECh)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">which attributes to set
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7</td>
<td>-</td>
<td>if set, copy single following byte to indicated attribs</td>
</tr>
<tr>
<td>bit 4 - 6</td>
<td>-</td>
<td>number of first attribute to change - 1</td>
</tr>
<tr>
<td>bit 0 - 3</td>
<td>-</td>
<td>number of consecutive attributes to change</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">new attributes
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>1</td>
<td>=</td>
<td>top left corner</td>
</tr>
<tr>
<td>2</td>
<td>=</td>
<td>top right corner</td>
</tr>
<tr>
<td>3</td>
<td>=</td>
<td>bottom left corner</td>
</tr>
<tr>
<td>4</td>
<td>=</td>
<td>bottom right corner</td>
</tr>
<tr>
<td>5</td>
<td>=</td>
<td>top edge</td>
</tr>
<tr>
<td>6</td>
<td>=</td>
<td>bottom edge</td>
</tr>
<tr>
<td>7</td>
<td>=</td>
<td>left edge</td>
</tr>
<tr>
<td>8</td>
<td>=</td>
<td>right edge</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="4">
<p align="right"><b>EEh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set characters for window frame
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">video modes command applies to (also see opcode ECh)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">which characters to set
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>bit 7</td>
<td>-</td>
<td>if set, copy single following byte to indicated chars</td>
</tr>
<tr>
<td>bit 4 - 6</td>
<td>-</td>
<td>number of first character to change - 1</td>
</tr>
<tr>
<td>bit 0 - 3</td>
<td>-</td>
<td>number of consecutive characters to change</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">new chars (same relative position as attributes above)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>EFh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set window name
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">length of name (should be in range 0 to logical screen
width)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">name</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>F0h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
clear input field to blanks
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>F1h</b></p>
</td>
<td valign="top" nowrap colspan="2">
fill input field with character
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">char</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>F2h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set color of input field
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number (1-N)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">attribute</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>F3h</b></p>
<p align="right"></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
set initial contents of input field
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number (1-N)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">enough chars to exactly fill field as defined by op FFh</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>F4h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
position cursor to start of specific input field
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number (1-N)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>F5h</b></p>
</td>
<td valign="top" nowrap colspan="2">
change field table entry
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">7-8 BYTEs</font></p>
</td>
<td valign="top">field table entry (also see opcode FFh below)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="3">
<p align="right"><b>F6h</b></p>
</td>
<td valign="top" nowrap colspan="2">
set field type
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">type
<table border="0" cellspacing="0" cellpadding="3">
<tr>
<td>00h</td>
<td>-</td>
<td>inactive</td>
</tr>
<tr>
<td>40h</td>
<td>-</td>
<td>output field</td>
</tr>
<tr>
<td>80h</td>
<td>-</td>
<td>input field</td>
</tr>
<tr>
<td>C0h</td>
<td>-</td>
<td>deselected field</td>
</tr>
<tr>
<td>C2h</td>
<td>-</td>
<td>selected field</td>
</tr>
</table>
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>F7h</b></p>
</td>
<td valign="top" colspan="2">
&quot;broadcast write&quot; write data to fields with
program output bit set in the field table entry, in field number order
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">N BYTEs</font></p>
</td>
<td valign="top">total length of all program output fields)</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>F8h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
scroll field up a line
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>F9h</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
scroll field down a line
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>FAh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
<p align="left">scroll field left</p>
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>FBh</b></p>
<p align="right"></p>
</td>
<td valign="top" nowrap colspan="2">
scroll field right
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">BYTE</font></p>
</td>
<td valign="top">field number</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="2">
<p align="right"><b>FCh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set field table header
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">6 BYTEs</font></p>
</td>
<td valign="top">field table header (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/42/4.html">#00442</a>)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>FDh</b></p>
</td>
<td valign="top" nowrap colspan="2">
reset modified bit for all fields
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><b>FEh</b></p>
</td>
<td valign="top" nowrap colspan="2">
reset selected and modified bits for all fields
</td>
</tr>
<tr>
<td valign="top" nowrap rowspan="4">
<p align="right"><b>FFh</b></p>
</td>
<td valign="top" nowrap colspan="2">
set up input fields
</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">6 BYTEs</font></p>
</td>
<td valign="top">table header (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/42/4.html">#00442</a>)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">7/8N BYTEs</font></p>
</td>
<td valign="top">the field table entries, one for each field (see <a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/44/4.html">#00444</a>)</td>
</tr>
<tr>
<td valign="top" nowrap>
<p align="right"><font color="#800000">Note:</font></p>
</td>
<td valign="top">DESQview uses and updates the actual copy of the
information which is contained in the stream. Thus this info must remain
intact until after the data entry is complete.</td>
</tr>
</table>
<hr>
<table border="3" cellpadding="3" cellspacing="3">
<tr>
<td valign="top" nowrap>
<p align="left"><b>See Also:</b></p>
</td>
<td valign="top">
<p align="left"><a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/39/4.html">#00439</a>,<a href="http://127.0.0.1:800/Default/www.delorie.com/djgpp/doc/rbinter/it/46/4.html">#00446</a></p>
</td>
</tr>
</table>
</body>
</html>
